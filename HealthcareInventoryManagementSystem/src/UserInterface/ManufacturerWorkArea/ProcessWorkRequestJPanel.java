/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManufacturerWorkArea;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.ManufacturingWorkResult;
import Business.WorkQueue.ManufacturedKits;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Abhilash Wase
 */
public class ProcessWorkRequestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
     private EcoSystem system;
     private UserAccount account;
     private Enterprise enterprise;
     //RecyclableWaste recyclableWaste = new VerifiedKits();
    //private LabTestWorkRequest request;
   /**
     * Creates new form ProcessWorkRequestJPanel
     */
    public ProcessWorkRequestJPanel(JPanel userProcessContainer,EcoSystem system,UserAccount account,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.account = account;
        this.enterprise= enterprise;
       
 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
      @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        submitJButton = new javax.swing.JButton();
        kitTypeComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        kitsJTextField = new javax.swing.JTextField();
        processToLabJText = new javax.swing.JButton();

        submitJButton.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        submitJButton.setText("Submit Result");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        kitTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please choose from the below", "Type A" }));
        kitTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kitTypeComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Type of Kit : ");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("jLabel3");

        kitsJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kitsJTextFieldActionPerformed(evt);
            }
        });

        processToLabJText.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        processToLabJText.setText("Process To Lab");
        processToLabJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processToLabJTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(kitsJTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kitTypeComboBox, 0, 309, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(326, 326, 326)
                        .addComponent(processToLabJText)
                        .addGap(18, 18, 18)
                        .addComponent(submitJButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(kitTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(kitsJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processToLabJText)
                    .addComponent(submitJButton))
                .addContainerGap(252, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    static boolean isNumberValid(String number)
    {
        String regex = "[\\\\s]*[0-9]*[0-9]+";
        return number.matches(regex);
    }
    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
      
        if(kitTypeComboBox.getSelectedIndex()==1)
        {
            if(isNumberValid(kitsJTextField.getText()) == false || kitsJTextField.getText() == null || kitsJTextField.getText().equals(""))
            {
                kitsJTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
                jLabel3.setForeground(Color.RED);
                JOptionPane.showMessageDialog(null, "Please enter a valid number for "+jLabel3.getText());
                return;
            }
              
        }
        
        ArrayList<WorkRequest> result = system.getWorkQueue().getWorkRequestList();
        ManufacturingWorkResult manufacturingWorkResult=null;
       if(result==null || result.isEmpty()){
           manufacturingWorkResult = new ManufacturingWorkResult();
          result.add(manufacturingWorkResult);
       }
       
       for (int i=0; i<result.size();i++) {
          manufacturingWorkResult = (ManufacturingWorkResult) result.get(i);
        
         if(kitTypeComboBox.getSelectedIndex()==1){
            int numberOfkits = Integer.parseInt(kitsJTextField.getText());
            
            
            if(numberOfkits==0){
            JOptionPane.showMessageDialog(null, "Please enter a value greater than 0");
            return;
            }
            
            ManufacturedKits manufacturedKits = manufacturingWorkResult.getManufacturedKits();
            if(manufacturedKits==null){
                manufacturedKits = new ManufacturedKits();
            }
            
            numberOfkits = numberOfkits+((String.valueOf(manufacturedKits.getNumberOfCovidKits()))==null?0:manufacturedKits.getNumberOfCovidKits());
            manufacturedKits.setNumberOfCovidKits(numberOfkits);
            
            
            
            manufacturingWorkResult.setManufacturedKits(manufacturedKits);
            JOptionPane.showMessageDialog(null, "Kits added Succesfully");
            
             return;
        }
       }
       
       
       
       

    }//GEN-LAST:event_submitJButtonActionPerformed

    private void kitTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kitTypeComboBoxActionPerformed
        
        
        if(kitTypeComboBox.getSelectedIndex()==1){
            jLabel3.setVisible(true);
            jLabel3.setText("Number Of Kits");
            
        }
        
    }//GEN-LAST:event_kitTypeComboBoxActionPerformed

    private void processToLabJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processToLabJTextActionPerformed
       
        LabTestWorkRequest request = new LabTestWorkRequest();
        request.setMessage("message");
        request.setSender(account);
        request.setStatus("Sent");
        
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof LabOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
            JOptionPane.showMessageDialog(null, "Request raised to Lab");
        }
        
    }//GEN-LAST:event_processToLabJTextActionPerformed

    private void kitsJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kitsJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kitsJTextFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox<String> kitTypeComboBox;
    private javax.swing.JTextField kitsJTextField;
    private javax.swing.JButton processToLabJText;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
