/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ManageAirliners;

import Business.Airliner;
import Business.AirlinerDirectory;
import Business.Airplane;
import Business.UserAccount;
import Business.UserDirectory;
import Interface.ManageTravelAgency.CreateNewFlightScheduleJPanel;
import Interface.ManageTravelAgency.ViewFlightScheduleJPanel;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ajith
 */
public class ViewAirlinerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewAirlinerJPanel
     */
    private JPanel panelRight;
    private AirlinerDirectory airlinerDirectory;
    private Airliner airliner;
    private UserDirectory userDirectory;
    
    public ViewAirlinerJPanel(JPanel panelRight, AirlinerDirectory ad, Airliner airliner, UserDirectory userDirectory) {
        initComponents();
        this.airlinerDirectory = ad;
        this.panelRight = panelRight;
        this.airliner = airliner;
        this.userDirectory = userDirectory;
        flightScheduleJTable.setVisible(false);
        newFlightBtn.setVisible(false);
        viewFlightBtn.setVisible(false);
    }

    public void populateAirlinerDetails(){
        flightScheduleJTable.setVisible(true);
        newFlightBtn.setVisible(true);
        viewFlightBtn.setVisible(true);
         DefaultTableModel dtm = (DefaultTableModel)flightScheduleJTable.getModel();
         dtm.setRowCount(0);
            Object[] row = new Object[5];
            List<Airplane> flightFleet = airliner.getFlightFleet();
            for(int i=0; i<flightFleet.size();i++){
                Airplane airplane = flightFleet.get(i);
                row[0] = airplane;
                row[1] = airplane.getFlightSchedule();
                row[2] = airplane.getFromLocation();
                row[3] = airplane.getToLocation();
           dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userNameJText = new javax.swing.JTextField();
        passwordJText = new javax.swing.JTextField();
        loginJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        flightScheduleJTable = new javax.swing.JTable();
        logoutBtn = new javax.swing.JButton();
        newFlightBtn = new javax.swing.JButton();
        viewFlightBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel1.setText("View Airliner");

        jLabel2.setText("User Name");

        jLabel3.setText("Password");

        loginJButton.setText("LOG IN");
        loginJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginJButtonActionPerformed(evt);
            }
        });

        flightScheduleJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight Id", "Schedule Time", "From Location", "To Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(flightScheduleJTable);

        logoutBtn.setText("Log Out");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        newFlightBtn.setText("New Flight");
        newFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFlightBtnActionPerformed(evt);
            }
        });

        viewFlightBtn.setText("View Flight");
        viewFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewFlightBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(408, 408, 408)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(viewFlightBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                            .addComponent(newFlightBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(logoutBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loginJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(userNameJText)
                                .addComponent(passwordJText, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)))))
                .addGap(153, 153, 153))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(userNameJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passwordJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(loginJButton)
                .addGap(68, 68, 68)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(newFlightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewFlightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout)panelRight.getLayout();
         int selectionButton = JOptionPane.YES_NO_OPTION;
         int selectionResult = JOptionPane.showConfirmDialog(null, "Confirm logout?","Warning",selectionButton);
         if(selectionResult == JOptionPane.YES_OPTION){
              ManageAirlinersJPanel manageAirlinePanel = new ManageAirlinersJPanel(panelRight, airlinerDirectory,userDirectory);  
                panelRight.add("ManageAirlinersJPanel", manageAirlinePanel);
                layout.previous(panelRight);
            }
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void loginJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginJButtonActionPerformed
        // TODO add your handling code here:
        if(userNameJText.getText()==null || userNameJText.getText().equals("")){
            userNameJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel1.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Username cannot be empty");
            return;
     }
     if(passwordJText.getText()==null || passwordJText.getText().equals("")){
            passwordJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel2.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Password cannot be empty");
            return;
     }
     UserAccount userAccount =  userDirectory.authenticateUser(userNameJText.getText(),passwordJText.getText(),airliner.getAirlinerName(),"Airliner");
     if(userAccount==null){
          JOptionPane.showMessageDialog(null, "Invalid Credentials");
            return;
     }
     else{
        populateAirlinerDetails();
        userNameJText.setText("");
        passwordJText.setText("");
     }
    }//GEN-LAST:event_loginJButtonActionPerformed

    private void newFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFlightBtnActionPerformed
        // TODO add your handling code here:
        CreateNewFlightScheduleJPanel createNewFlightJPanel = new CreateNewFlightScheduleJPanel(panelRight,airlinerDirectory,airliner.getAirlinerName(),userDirectory);
        CardLayout layout = (CardLayout)panelRight.getLayout();
        panelRight.add("CreateNewFlightScheduleJPanel", createNewFlightJPanel);
        layout.next(panelRight);
    }//GEN-LAST:event_newFlightBtnActionPerformed

    private void viewFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewFlightBtnActionPerformed
        // TODO add your handling code here:
         int selectedRow = flightScheduleJTable.getSelectedRow();
         
        if(selectedRow>=0){
            Airplane airplane = (Airplane)flightScheduleJTable.getValueAt(selectedRow, 0);
            ViewFlightScheduleJPanel viewFlightJPanel = new ViewFlightScheduleJPanel(panelRight,airlinerDirectory,airplane,airliner.getFlightFleet(),airliner,userDirectory);
            CardLayout layout = (CardLayout)panelRight.getLayout();
            panelRight.add("ViewFlightScheduleJPanel", viewFlightJPanel);
            layout.next(panelRight);
         }
    }//GEN-LAST:event_viewFlightBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable flightScheduleJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loginJButton;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton newFlightBtn;
    private javax.swing.JTextField passwordJText;
    private javax.swing.JTextField userNameJText;
    private javax.swing.JButton viewFlightBtn;
    // End of variables declaration//GEN-END:variables
}
