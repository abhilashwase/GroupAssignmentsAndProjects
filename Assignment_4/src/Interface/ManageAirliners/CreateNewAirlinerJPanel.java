/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ManageAirliners;

import Business.Airliner;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

/**
 *
 * @author ajith
 */
public class CreateNewAirlinerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateNewAirlinerJPanel
     */
    
    private AirlinerDirectory airlineDirectory;
    private JPanel panelRight;
    private UserDirectory userDirectory ;
    
    public CreateNewAirlinerJPanel(JPanel panelRight,AirlinerDirectory airlineDirectory, UserDirectory userDirectory) {
        initComponents();
        this.airlineDirectory = airlineDirectory;
        this.panelRight = panelRight;
        this.userDirectory = userDirectory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nameJText = new javax.swing.JTextField();
        userNameJText = new javax.swing.JTextField();
        passwordJText = new javax.swing.JTextField();
        flightIdJText = new javax.swing.JTextField();
        fromLocationJText = new javax.swing.JTextField();
        toLocationJText = new javax.swing.JTextField();
        priceJText = new javax.swing.JTextField();
        spinnerHour = new javax.swing.JSpinner();
        spinnerMinute = new javax.swing.JSpinner();
        spinnerAmPm = new javax.swing.JSpinner();
        createBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        jLabel1.setText("CREATE AIRLINER");

        jLabel2.setText("Name:");

        jLabel3.setText("Username:");

        jLabel4.setText("Password:");

        jLabel5.setText("Flight ID:");

        jLabel6.setText("From Location:");

        jLabel7.setText("To Location:");

        jLabel8.setText("Scheduled Time:");

        jLabel9.setText("Price:");

        userNameJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameJTextActionPerformed(evt);
            }
        });

        createBtn.setText("Create");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        backBtn.setText("< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(backBtn)
                        .addGap(252, 252, 252)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nameJText)
                                .addComponent(userNameJText)
                                .addComponent(passwordJText)
                                .addComponent(flightIdJText)
                                .addComponent(fromLocationJText)
                                .addComponent(toLocationJText)
                                .addComponent(priceJText, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(spinnerHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(spinnerMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(spinnerAmPm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(createBtn))))
                .addContainerGap(561, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(userNameJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(passwordJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(flightIdJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(fromLocationJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(toLocationJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(spinnerHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerAmPm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(priceJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addComponent(createBtn)
                .addContainerGap(260, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void userNameJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameJTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameJTextActionPerformed

    private boolean userNamePatternCorrect(){
        Pattern p = Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$", Pattern.CASE_INSENSITIVE);
        Matcher  m =p.matcher(userNameJText.getText());
        boolean b = m.matches();
        return b;
    }
    private boolean passwordPatternCorrect() {
       Pattern p = Pattern.compile("((?=.*[a-z])(?=.*\\d)(?=.*[A-Z])(?=.*[@#$%!]).{6,40})");
       Matcher m = p.matcher(passwordJText.getText());
       boolean b = m.matches();
       return b;
   }
    
    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        // TODO add your handling code here:
     nameJText.setBorder(new LineBorder(new Color(128,128,128)));
     userNameJText.setBorder(new LineBorder(new Color(128,128,128)));
     passwordJText.setBorder(new LineBorder(new Color(128,128,128)));
     flightIdJText.setBorder(new LineBorder(new Color(128,128,128)));
     fromLocationJText.setBorder(new LineBorder(new Color(128,128,128)));
     toLocationJText.setBorder(new LineBorder(new Color(128,128,128)));
     spinnerAmPm.setBorder(new LineBorder(new Color(128,128,128)));
     spinnerHour.setBorder(new LineBorder(new Color(128,128,128)));
     spinnerMinute.setBorder(new LineBorder(new Color(128,128,128)));  
        
        jLabel2.setForeground(Color.black);
        jLabel4.setForeground(Color.black);
        jLabel5.setForeground(Color.black);
        jLabel6.setForeground(Color.black);
        jLabel7.setForeground(Color.black);
        jLabel8.setForeground(Color.black);
        jLabel9.setForeground(Color.black);
 
     if(nameJText.getText()==null || nameJText.getText().equals("")){
            nameJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel2.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Name cannot be empty");
            return;
     }
     
     if(flightIdJText.getText()==null || flightIdJText.getText().equals("")){
            flightIdJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel4.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Id cannot be empty");
            return;
     }
     if(fromLocationJText.getText()==null || fromLocationJText.getText().equals("")){
            fromLocationJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel5.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "From Location cannot be empty");
            return;
     }
     if(toLocationJText.getText()==null || toLocationJText.getText().equals("")){
            toLocationJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel6.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "To Location cannot be empty");
            return;
     }
     if(userNameJText.getText()==null || userNameJText.getText().equals("")){
            userNameJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel7.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Username cannot be empty");
            return;
     }
     if(passwordJText.getText()==null || passwordJText.getText().equals("")){
            passwordJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel9.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Password cannot be empty");
            return;
     }
     if(!userNamePatternCorrect()){
            userNameJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel7.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "UserName Should be in the form of YYY@hgj.gfgh");
            return;
        }
       
        if(!passwordPatternCorrect()){
            passwordJText.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel9.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Password Should be atleast 6 digits and a combination of number, uppercaseletter, lower case letter and special character $,#,*,&");
            return;
        }
        
     for(Airliner airliner : airlineDirectory.getAirlinerList()){
         if(airliner.getAirlinerName().equalsIgnoreCase(nameJText.getText())){
             JOptionPane.showMessageDialog(null, "Airliner Already Exists.");
            return;
         }
     }        
    
     int flightId = 0;
     try{
     flightId = Integer.parseInt(flightIdJText.getText());
     }
     catch(NumberFormatException e){
         JOptionPane.showMessageDialog(null, "Please enter valid FlightId");
         return;
     }   
     double price = 0;
     try{
      price = Double.parseDouble(priceJText.getText());
     }
     catch(NumberFormatException e){
        JOptionPane.showMessageDialog(null, "Please enter valid Price");
         return; 
     }

     int totalNoOfSeats = 150;
    
     Airplane airplane = new Airplane(flightId,fromLocationJText.getText(),toLocationJText.getText(),spinnerHour.getValue()+":"+spinnerMinute.getValue()+" "+spinnerAmPm.getValue(),totalNoOfSeats,nameJText.getText(),0,price);
     
     List<Airplane> flightFleet = new ArrayList<>();
     flightFleet.add(airplane);
     
     
     List<Airliner> airlinerList = airlineDirectory.getAirlinerList();
      Airliner airliner = new Airliner(nameJText.getText(),1,flightFleet);
     airlinerList.add(airliner);
     userDirectory.createUserAccount(userNameJText.getText(), passwordJText.getText(), airliner.getAirlinerName(), "Airliner");
       
     JOptionPane.showMessageDialog(null, "Airliner Added Successfully.");
          this.panelRight.remove(this);
         Component[] cps = this.panelRight.getComponents();
         for(Component cp : cps){
             if(cp instanceof ManageAirlinersJPanel){
                 ManageAirlinersJPanel ams = (ManageAirlinersJPanel)cp;
                 ams.populateTable();
             }
         }
        
        
    }//GEN-LAST:event_createBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout)panelRight.getLayout();
        panelRight.remove(this);
        layout.previous(panelRight); 
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton createBtn;
    private javax.swing.JTextField flightIdJText;
    private javax.swing.JTextField fromLocationJText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField nameJText;
    private javax.swing.JTextField passwordJText;
    private javax.swing.JTextField priceJText;
    private javax.swing.JSpinner spinnerAmPm;
    private javax.swing.JSpinner spinnerHour;
    private javax.swing.JSpinner spinnerMinute;
    private javax.swing.JTextField toLocationJText;
    private javax.swing.JTextField userNameJText;
    // End of variables declaration//GEN-END:variables
}
